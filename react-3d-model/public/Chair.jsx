/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 chair.gltf 
Author: Tyron (https://sketchfab.com/Omty)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/barber-chair-6458816e73534df0a26ddc6567395d2c
Title: Barber Chair
*/

import React, { useState, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { proxy, useSnapshot } from 'valtio'
import { HexColorPicker } from 'react-colorful'

const state = proxy({
  current: null,
  items: {
    Leather: '#000000',
    Metal: '#ffffff',
    Plastic: '#ffffff',
  }
});

export default function Model(props) {
  const { nodes, materials } = useGLTF('/chair.gltf')
  const snap = useSnapshot(state)
  const [hovered, set] = useState(null)

  useEffect(() => {
    const cursor = `<svg width="64" height="64" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0)"><path fill="rgba(255, 255, 255, 0.5)" d="M29.5 54C43.031 54 54 43.031 54 29.5S43.031 5 29.5 5 5 15.969 5 29.5 15.969 54 29.5 54z" stroke="#fff"/><g filter="url(#filter0_d)"><path d="M29.5 47C39.165 47 47 39.165 47 29.5S39.165 12 29.5 12 12 19.835 12 29.5 19.835 47 29.5 47z" fill="${snap.items[hovered]}"/></g><path d="M2 2l11 2.947L4.947 13 2 2z" fill="#fff"/><text fill="#fff" style="white-space:pre" font-family="Inter var, sans-serif" font-size="8" letter-spacing="-.01em"><tspan x="35" y="63">${hovered}</tspan></text></g><defs><clipPath id="clip0"><path fill="#fff" d="M0 0h64v64H0z"/></clipPath><filter id="filter0_d" x="6" y="8" width="47" height="47" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/><feOffset dy="2"/><feGaussianBlur stdDeviation="3"/><feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0"/><feBlend in2="BackgroundImageFix" result="effect1_dropShadow"/><feBlend in="SourceGraphic" in2="effect1_dropShadow" result="shape"/></filter></defs></svg>`
    const auto = `<svg width="64" height="64" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill="rgba(255, 255, 255, 0.5)" d="M29.5 54C43.031 54 54 43.031 54 29.5S43.031 5 29.5 5 5 15.969 5 29.5 15.969 54 29.5 54z" stroke="#000"/><path d="M2 2l11 2.947L4.947 13 2 2z" fill="#000"/></svg>`
    document.body.style.cursor = `url('data:image/svg+xml;base64,${btoa(hovered ? cursor : auto)}'), auto`
  }, [hovered])

  return (
    <group
      {...props}
      dispose={null}
      position={[0, -150, 0]}
      scale={0.4}
      onPointerOver={(e) => { e.stopPropagation(), set(e.object.material.name) }}
      onPointerOut={(e) => { e.intersections.length === 0 && set(null) }}
      onPointerDown={(e) => { e.stopPropagation(), state.current = e.object.material.name }}
      onPointerMissed={(e) => { state.current = null }}
    >
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh material-color={snap.items.Leather} geometry={nodes.Object_2.geometry} material={materials.Leather} />
        <mesh material-color={snap.items.Metal} geometry={nodes.Object_3.geometry} material={materials.Metal} />
        <mesh material-color={snap.items.Plastic} geometry={nodes.Object_4.geometry} material={materials.Plastic} />
      </group>
    </group>
  )
}

export function Picker() {
  const snap = useSnapshot(state)
  return (
    <div
      className='color-block'
      style={{ display: snap.current ? 'block' : 'none' }}
    >
      <div className="color-block__inner">
        <HexColorPicker
          className='color-picker'
          color={snap.items[snap.current]}
          onChange={(color) => { state.items[snap.current] = color }}
        />
        <h1>{snap.current}</h1>
      </div>
    </div>
  )
}

useGLTF.preload('/chair.gltf')
